from accounts import models
from django import forms
from django.core.exceptions import ValidationError


class LoginForm(forms.Form):
    """登录验证"""
    username = forms.CharField(required=True)
    password = forms.CharField(required=True)


class RegisterCreateUser(forms.Form):
    """创建用户合法性"""

    username     = forms.CharField(required=True,min_length=3,max_length=32,error_messages={
        'required':'用户名不能为空',
        'min_length':'用户名不能少于3个字符',
        'max_length':'用户名不能大于32个字符'
    })

    username_zh  = forms.CharField(required=False)

    password     = forms.CharField(required=True,min_length=3,max_length=10,error_messages={
        'required': '密码不能为空',
        'min_length': '密码不能少于3个字符',
        'max_length': '密码不能大于10个字符'
    })

    re_password  = forms.CharField(required=True,min_length=3,max_length=10,error_messages={
        'required': '密码不能为空',
    })

    email        = forms.EmailField(required=True,error_messages={
        'required': '邮箱不能为空',
        'invalid': '请输入正确的邮箱格式'
    })


    def clean_username(self):
        username = self.cleaned_data.get('username')
        users = models.UserInfo.objects.filter(username=username).count()
        if users:
            raise ValidationError('用户已存在')

        return username


    def clean_email(self):
        email = self.cleaned_data.get('email')
        email_count = models.UserInfo.objects.filter(email=email).count()
        if email_count:
            raise ValidationError('邮箱已存在')
        return email

    def clean(self):
        password1 = self.cleaned_data.get('password')
        password2 = self.cleaned_data.get('re_password')
        if password1 and password2 and password1 != password2:
            self.add_error('re_password','两次输入密码不一致')
            return None
        else:
            return self.cleaned_data

